/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package teameval;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Eval extends JFrame {

    //these are fields that will be used to hold the values pulled from the interface
    String teamname;
    int q1;
    int q2;
    int q3;
    int q4;
    String comments;
    double teamavg;
    
    
    
    // instance variables used to manipulate database
   private Connection myConnection;
   // used to write sql queries and execute them
   private Statement myStatement;  
   // get the results from sql queries
   private ResultSet myResultSet;
          
    
    
    /**
     * Creates new form TeamEvalUI
     */
    public Eval(String databaseDriver, String databaseURL) {
        
        // establish connection to database
      try
      {
         // load Sun driver
         //Class.forName( databaseDriver );
         DriverManager.registerDriver(new org.apache.derby.jdbc.ClientDriver());
         // connect to database
         myConnection = DriverManager.getConnection( databaseURL,"Hamad","admin" );

         // create Statement for executing SQL
         myStatement = myConnection.createStatement();
      }
      catch ( SQLException exception )
      {
         exception.printStackTrace();
      }
        initComponents();
        loadTeams();
    }

    // loads the team names to combo box
    private void loadTeams()
    {
         // get all  team members from database
      try
      {
        // gets all team members from the table name Teams
          myResultSet = myStatement.executeQuery( "SELECT DISTINCT TEAMNAME FROM HAMAD.TEAMS");
       
         while ( myResultSet.next() )
         {
               teamComboBox.addItem(myResultSet.getString( "TEAMNAME" ) );
         }

         myResultSet.close(); // close myResultSet
        

      } // end try

      catch ( SQLException exception )
      {
         exception.printStackTrace();
      }
    }
    
    //update query
    private void updateTeams()
   {
      // update balance in database
      try
      {
       
          //"Q4 = " + q4  + "AVGSCORE = " + teamavg +"COMMENTS = '" + comments +
         // String sql = "UPDATE EVAL.TEAMS SET Q1 = " + q1 + "," + "Q2 = " + q2  + "Q3 = " + q3+ " WHERE " +
            //           "TEAMNAME = '"+teamname+"'";
          String sql = "UPDATE HAMAD.TEAMS SET Q1 = " + q1 + "," + "Q2 = " + q2+ ","  +"Q3="+ q3+ "," +"Q4 = " + q4 + ","  + "AVGSCORE = " + teamavg+ ","  +"COMMENTS = '" + comments + "' WHERE " +
                       "TEAMNAME = '"+teamname+"'";
          //String sql2 =  "UPDATE EVAL.TEAMEVAL" + " SET q2 = " + q2 + " WHERE " +
          //             "TEAMNAME = '" + myteamname + "'" + "and course = '" + courseName + "'";
          myStatement.executeUpdate(sql);
          //myStatement.executeUpdate(sql2);
         
      }
      catch ( SQLException exception )
      {
         exception.printStackTrace();
      }
   }
    
    //method to calculate average
    public double calculateAverage(){
        
        double avg;
        
        q1 = sliderq1.getValue();
        q2 = sliderq2.getValue();
        q3= sliderq3.getValue();
        q4= sliderq4.getValue();
        
        avg=(q1+q2+q3+q4)/4.0;
        return avg;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        teamComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sliderq1 = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        sliderq2 = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        sliderq3 = new javax.swing.JSlider();
        sliderq4 = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentsarea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        averagefield = new javax.swing.JTextField();
        calculateavg = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("TEAMS");

        teamComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Q1: Technical ?");

        jLabel3.setText("Q2: Useful? ");

        sliderq1.setMajorTickSpacing(1);
        sliderq1.setMaximum(5);
        sliderq1.setMinimum(1);
        sliderq1.setMinorTickSpacing(1);
        sliderq1.setPaintLabels(true);
        sliderq1.setPaintTicks(true);
        sliderq1.setToolTipText("");

        jLabel4.setText("Q3: Clarify?");

        sliderq2.setMajorTickSpacing(1);
        sliderq2.setMaximum(5);
        sliderq2.setMinimum(1);
        sliderq2.setMinorTickSpacing(1);
        sliderq2.setPaintLabels(true);
        sliderq2.setPaintTicks(true);
        sliderq2.setToolTipText("");

        jLabel5.setText("Q4: Overall?");

        sliderq3.setMajorTickSpacing(1);
        sliderq3.setMaximum(5);
        sliderq3.setMinimum(1);
        sliderq3.setMinorTickSpacing(1);
        sliderq3.setPaintLabels(true);
        sliderq3.setPaintTicks(true);
        sliderq3.setToolTipText("");

        sliderq4.setMajorTickSpacing(1);
        sliderq4.setMaximum(5);
        sliderq4.setMinimum(1);
        sliderq4.setMinorTickSpacing(1);
        sliderq4.setPaintLabels(true);
        sliderq4.setPaintTicks(true);
        sliderq4.setToolTipText("");

        jLabel6.setText("Comments");

        commentsarea.setColumns(20);
        commentsarea.setRows(5);
        commentsarea.setText("Add Group members name here");
        jScrollPane1.setViewportView(commentsarea);

        jLabel7.setText("Computed average from the questions above:");

        averagefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                averagefieldActionPerformed(evt);
            }
        });

        calculateavg.setText("Calc AVG");
        calculateavg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateavgActionPerformed(evt);
            }
        });

        submit.setText("SUBMIT");
        submit.setEnabled(false);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(calculateavg, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(averagefield))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sliderq3, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(teamComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sliderq1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(sliderq2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sliderq4, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(sliderq1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(sliderq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(sliderq3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(sliderq4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calculateavg, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(averagefield, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(clear))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void teamComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void averagefieldActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void calculateavgActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        teamavg=calculateAverage();
        averagefield.setText(""+teamavg);
        submit.setEnabled(true);
    }                                            

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
          //Object obj = teamComboBox.g
        teamname = teamComboBox.getSelectedItem().toString();
        //int x = teamComboBox.getSelectedIndex();
        q1 = sliderq1.getValue();
        q2 = sliderq2.getValue();
        q3= sliderq3.getValue();
        q4= sliderq4.getValue();
        comments=commentsarea.getText().toString();
        teamavg=calculateAverage();
        updateTeams();
         JOptionPane.showMessageDialog( null, "Submitted Scores for : " + teamComboBox.getSelectedItem().toString() );
      
    }                                      

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        sliderq1.setValue(1);
        sliderq2.setValue(1);
        sliderq3.setValue(1);
        sliderq4.setValue(1);
        submit.setEnabled(false);
        commentsarea.setText("Add your team members here");
        averagefield.setText("");
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Eval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Eval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Eval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Eval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        String databaseDriver = "org.apache.derby.jdbc.ClientDriver";
        //String databaseDriver = "sun.jdbc.odbc.JdbcOdbcDriver";
        String databaseURL = "jdbc:derby://localhost:1527/Evaluation;create=true";

         
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Eval(databaseDriver, databaseURL).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField averagefield;
    private javax.swing.JButton calculateavg;
    private javax.swing.JButton clear;
    private javax.swing.JTextArea commentsarea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider sliderq1;
    private javax.swing.JSlider sliderq2;
    private javax.swing.JSlider sliderq3;
    private javax.swing.JSlider sliderq4;
    private javax.swing.JButton submit;
    private javax.swing.JComboBox<String> teamComboBox;
    // End of variables declaration                   
}
